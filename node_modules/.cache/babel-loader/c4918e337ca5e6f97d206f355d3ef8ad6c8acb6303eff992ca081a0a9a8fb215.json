{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst Funds = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024'); // Default year is 2024\n  const [groupedResults, setGroupedResults] = useState({}); // State for grouped results\n  const [query, setQuery] = useState(''); // Query for filtering\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/public/data/MutualFunds.json' : '/public/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Filter and group data\n        const filteredResults = data.filter(item => item.company_name.toLowerCase().includes(query.toLowerCase()));\n        const grouped = filteredResults.reduce((acc, item) => {\n          if (!acc[item.company_name]) {\n            acc[item.company_name] = [];\n          }\n          acc[item.company_name].push(item);\n          return acc;\n        }, {});\n        setGroupedResults(grouped);\n      } catch (error) {\n        console.error('There was an error fetching the data!', error);\n        setGroupedResults({});\n      }\n    };\n    fetchResults();\n  }, [year, query]); // Run effect when year or query changes\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: Object.keys(groupedResults).length > 0 ? Object.keys(groupedResults[Object.keys(groupedResults)[0]][0].monthly_total_returns) : [],\n    datasets: Object.keys(groupedResults).map(companyName => ({\n      label: companyName,\n      data: groupedResults[companyName].flatMap(item => Object.values(item.monthly_total_returns)),\n      fill: false,\n      borderColor: '#007bff',\n      tension: 0.1\n    }))\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Month'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Return'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by company name\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), Object.keys(groupedResults).length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year and query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"9DInu+B6Md6FUVhvt2PygKg6od4=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","Funds","_s","results","setResults","year","setYear","groupedResults","setGroupedResults","query","setQuery","fetchResults","fileName","response","get","data","filteredResults","filter","item","company_name","toLowerCase","includes","grouped","reduce","acc","push","error","console","chartData","labels","Object","keys","length","monthly_total_returns","datasets","map","companyName","label","flatMap","values","fill","borderColor","tension","chartOptions","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","y","beginAtZero","className","children","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","options","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\n// Register necessary components for Chart.js\nChartJS.register(LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n\nconst Funds = () => {\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024'); // Default year is 2024\n  const [groupedResults, setGroupedResults] = useState({}); // State for grouped results\n  const [query, setQuery] = useState(''); // Query for filtering\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/public/data/MutualFunds.json' : '/public/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Filter and group data\n        const filteredResults = data.filter(item =>\n          item.company_name.toLowerCase().includes(query.toLowerCase())\n        );\n\n        const grouped = filteredResults.reduce((acc, item) => {\n          if (!acc[item.company_name]) {\n            acc[item.company_name] = [];\n          }\n          acc[item.company_name].push(item);\n          return acc;\n        }, {});\n\n        setGroupedResults(grouped);\n      } catch (error) {\n        console.error('There was an error fetching the data!', error);\n        setGroupedResults({});\n      }\n    };\n\n    fetchResults();\n  }, [year, query]); // Run effect when year or query changes\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: Object.keys(groupedResults).length > 0 ? Object.keys(groupedResults[Object.keys(groupedResults)[0]][0].monthly_total_returns) : [],\n    datasets: Object.keys(groupedResults).map((companyName) => ({\n      label: companyName,\n      data: groupedResults[companyName].flatMap(item => Object.values(item.monthly_total_returns)),\n      fill: false,\n      borderColor: '#007bff',\n      tension: 0.1,\n    })),\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            return `${context.dataset.label}: ${context.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Month',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Return',\n        },\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by company name\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n      </div>\n      {Object.keys(groupedResults).length > 0 ? (\n        <Line data={chartData} options={chartOptions} />\n      ) : (\n        <p>No data available for the selected year and query.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}