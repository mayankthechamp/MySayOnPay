{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`);\n        const response = await axios.get(fileName);\n        const data = response.data;\n        console.log('Fetched data:', data);\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, [year]);\n\n  // Helper function to calculate Total Return\n  const calculateTotalReturn = (fundAnnualReturn, MER) => {\n    // Parse the percentage strings into numbers\n    const returnNumber = parseFloat(fundAnnualReturn);\n    const merNumber = parseFloat(MER);\n\n    // Add the numbers together\n    const totalReturn = returnNumber + merNumber;\n\n    // Return the formatted percentage string\n    return totalReturn.toFixed(2); // Ensures two decimal places\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), data.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data for \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fund Annual Return (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Management Expense Ratio (MER) (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Return (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.company_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.fundAnnualReturn, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.MER, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [calculateTotalReturn(item.fundAnnualReturn, item.MER), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, item.company_name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : !loading && !data.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"AvT4g6QOqwmbANQGLSbbT/5PDkc=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","data","setData","year","setYear","loading","setLoading","error","setError","fetchResults","fileName","console","log","response","get","calculateTotalReturn","fundAnnualReturn","MER","returnNumber","parseFloat","merNumber","totalReturn","toFixed","className","children","_jsxFileName","lineNumber","columnNumber","onClick","length","map","item","company_name","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Funds.css';\n\nconst Funds = () => {\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`);\n\n        const response = await axios.get(fileName);\n        const data = response.data;\n\n        console.log('Fetched data:', data);\n\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  // Helper function to calculate Total Return\n  const calculateTotalReturn = (fundAnnualReturn, MER) => {\n    // Parse the percentage strings into numbers\n    const returnNumber = parseFloat(fundAnnualReturn);\n    const merNumber = parseFloat(MER);\n\n    // Add the numbers together\n    const totalReturn = returnNumber + merNumber;\n\n    // Return the formatted percentage string\n    return totalReturn.toFixed(2); // Ensures two decimal places\n  };\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {data.length > 0 && !loading ? (\n        <div>\n          <h2>Data for {year}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Company Name</th>\n                <th>Fund Annual Return (%)</th>\n                <th>Management Expense Ratio (MER) (%)</th>\n                <th>Total Return (%)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item) => (\n                <tr key={item.company_name}>\n                  <td>{item.company_name}</td>\n                  <td>{item.fundAnnualReturn}%</td>\n                  <td>{item.MER}%</td>\n                  <td>{calculateTotalReturn(item.fundAnnualReturn, item.MER)}%</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : !loading && !data.length ? (\n        <p>No data available for the selected year.</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}