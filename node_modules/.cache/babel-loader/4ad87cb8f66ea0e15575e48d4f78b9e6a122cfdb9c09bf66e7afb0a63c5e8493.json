{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyReturns = Object.values(item.monthly_total_returns);\n          const totalMonths = monthlyReturns.length;\n          const totalReturn = monthlyReturns.reduce((acc, curr) => acc + curr, 0);\n          const averageMonthlyReturn = totalReturn / totalMonths;\n          const annualReturn = (averageMonthlyReturn * 12).toFixed(2);\n          const returnLostToAdvisor = (item.total_return - annualReturn).toFixed(2);\n          const percentageLost = (returnLostToAdvisor / item.total_return * 100).toFixed(2);\n          return {\n            company_name: item.company_name,\n            averageMonthlyReturn: averageMonthlyReturn.toFixed(2),\n            annualReturn,\n            totalReturn: item.total_return.toFixed(2),\n            returnLostToAdvisor,\n            percentageLost\n          };\n        });\n        setCalculatedData(metrics);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchResults();\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), calculatedData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Monthly Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Annual Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Return Lost to Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"% Return Lost to Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: calculatedData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.averageMonthlyReturn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.annualReturn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalReturn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.returnLostToAdvisor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.percentageLost, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, item.company_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : !loading && !calculatedData.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"SGkQ+SZUOavlafDbvHI7W7ZvrNQ=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","calculatedData","setCalculatedData","year","setYear","loading","setLoading","error","setError","fetchResults","fileName","console","log","response","get","data","metrics","map","item","monthlyReturns","Object","values","monthly_total_returns","totalMonths","length","totalReturn","reduce","acc","curr","averageMonthlyReturn","annualReturn","toFixed","returnLostToAdvisor","total_return","percentageLost","company_name","className","children","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\nconst Funds = () => {\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyReturns = Object.values(item.monthly_total_returns);\n          const totalMonths = monthlyReturns.length;\n          const totalReturn = monthlyReturns.reduce((acc, curr) => acc + curr, 0);\n          const averageMonthlyReturn = totalReturn / totalMonths;\n          const annualReturn = (averageMonthlyReturn * 12).toFixed(2);\n          const returnLostToAdvisor = (item.total_return - annualReturn).toFixed(2);\n          const percentageLost = ((returnLostToAdvisor / item.total_return) * 100).toFixed(2);\n\n          return {\n            company_name: item.company_name,\n            averageMonthlyReturn: averageMonthlyReturn.toFixed(2),\n            annualReturn,\n            totalReturn: item.total_return.toFixed(2),\n            returnLostToAdvisor,\n            percentageLost\n          };\n        });\n\n        setCalculatedData(metrics);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {calculatedData.length > 0 && !loading ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Company Name</th>\n              <th>Average Monthly Return</th>\n              <th>Annual Return</th>\n              <th>Total Return</th>\n              <th>Return Lost to Advisor</th>\n              <th>% Return Lost to Advisor</th>\n            </tr>\n          </thead>\n          <tbody>\n            {calculatedData.map((item) => (\n              <tr key={item.company_name}>\n                <td>{item.company_name}</td>\n                <td>{item.averageMonthlyReturn}</td>\n                <td>{item.annualReturn}</td>\n                <td>{item.totalReturn}</td>\n                <td>{item.returnLostToAdvisor}</td>\n                <td>{item.percentageLost}%</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : !loading && !calculatedData.length ? (\n        <p>No data available for the selected year.</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}