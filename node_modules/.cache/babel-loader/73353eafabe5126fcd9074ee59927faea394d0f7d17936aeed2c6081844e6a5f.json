{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const API_URL = 'https://api.sec-api.io/?token=6b3bf19df1784cb1a59bf55a7834ca93a3e59ec3cdc6d629837d96b711f99a5e'; // Replace with your actual API token\n        const requestBody = {\n          query: 'formType:\"NPORT-P\"',\n          from: '0',\n          size: '200',\n          sort: [{\n            filedAt: {\n              order: 'desc'\n            }\n          }]\n        };\n        const response = await axios.post(API_URL, requestBody, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = response.data.filings;\n        const filingDetails = await Promise.all(data.map(async item => {\n          try {\n            const filingResponse = await axios.get(item.linkToFilingDetails);\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(filingResponse.data, \"text/xml\");\n\n            // Extract returnInfo and monthlyTotReturns\n            const returnInfo = xmlDoc.querySelector('ItemB5ReturnInformation');\n            if (returnInfo) {\n              var _xmlDoc$querySelector, _xmlDoc$querySelector2, _xmlDoc$querySelector3, _returnInfo$querySele;\n              const monthlyTotReturnsNodes = returnInfo.querySelectorAll('monthlyTotReturn');\n              const monthlyTotReturns = Array.from(monthlyTotReturnsNodes).map(node => ({\n                classId: node.getAttribute('classId'),\n                rtn1: parseFloat(node.getAttribute('rtn1')),\n                rtn2: parseFloat(node.getAttribute('rtn2')),\n                rtn3: parseFloat(node.getAttribute('rtn3'))\n              }));\n              return {\n                name: ((_xmlDoc$querySelector = xmlDoc.querySelector('FundName')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || 'N/A',\n                position: ((_xmlDoc$querySelector2 = xmlDoc.querySelector('Position')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || 'N/A',\n                year: ((_xmlDoc$querySelector3 = xmlDoc.querySelector('Year')) === null || _xmlDoc$querySelector3 === void 0 ? void 0 : _xmlDoc$querySelector3.textContent) || 'N/A',\n                classIdentificationNumber: ((_returnInfo$querySele = returnInfo.querySelector('ClassIdentificationNumber')) === null || _returnInfo$querySele === void 0 ? void 0 : _returnInfo$querySele.textContent) || 'N/A',\n                monthlyTotReturns\n              };\n            }\n            return null;\n          } catch (error) {\n            console.error('Error fetching filing details:', error);\n            return null;\n          }\n        }));\n        const filteredResults = filingDetails.filter(item => item !== null);\n        setResults(filteredResults);\n      } catch (error) {\n        console.error('There was an error fetching the data!', error);\n        setResults([]); // Clear results on error\n      }\n    };\n    fetchResults();\n  }, []);\n  const calculateMER = monthlyReturns => {\n    const averageReturn = monthlyReturns.reduce((acc, val) => acc + val, 0) / monthlyReturns.length;\n    return (averageReturn * 12).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Funds Return Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results1\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 16\n          }, this), \" \", result.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Position:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }, this), \" \", result.position]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }, this), \" \", result.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Class Identification Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }, this), \" \", result.classIdentificationNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monthly Total Return Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), result.monthlyTotReturns && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [result.monthlyTotReturns.map((returnData, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Month ${idx + 1}: ${returnData.rtn1}, ${returnData.rtn2}, ${returnData.rtn3}`\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"MER (Annual):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 20\n            }, this), \" \", calculateMER(result.monthlyTotReturns.map(r => r.rtn1)), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","results","setResults","fetchResults","API_URL","requestBody","query","from","size","sort","filedAt","order","response","post","headers","data","filings","filingDetails","Promise","all","map","item","filingResponse","get","linkToFilingDetails","parser","DOMParser","xmlDoc","parseFromString","returnInfo","querySelector","_xmlDoc$querySelector","_xmlDoc$querySelector2","_xmlDoc$querySelector3","_returnInfo$querySele","monthlyTotReturnsNodes","querySelectorAll","monthlyTotReturns","Array","node","classId","getAttribute","rtn1","parseFloat","rtn2","rtn3","name","textContent","position","year","classIdentificationNumber","error","console","filteredResults","filter","calculateMER","monthlyReturns","averageReturn","reduce","acc","val","length","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","result","index","returnData","idx","r","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Funds.css';\n\nconst Funds = () => {\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const API_URL = 'https://api.sec-api.io/?token=6b3bf19df1784cb1a59bf55a7834ca93a3e59ec3cdc6d629837d96b711f99a5e'; // Replace with your actual API token\n        const requestBody = {\n          query: 'formType:\"NPORT-P\"',\n          from: '0',\n          size: '200',\n          sort: [{ filedAt: { order: 'desc' } }]\n        };\n\n        const response = await axios.post(API_URL, requestBody, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const data = response.data.filings;\n\n        const filingDetails = await Promise.all(\n          data.map(async (item) => {\n            try {\n              const filingResponse = await axios.get(item.linkToFilingDetails);\n              const parser = new DOMParser();\n              const xmlDoc = parser.parseFromString(filingResponse.data, \"text/xml\");\n\n              // Extract returnInfo and monthlyTotReturns\n              const returnInfo = xmlDoc.querySelector('ItemB5ReturnInformation');\n              if (returnInfo) {\n                const monthlyTotReturnsNodes = returnInfo.querySelectorAll('monthlyTotReturn');\n                const monthlyTotReturns = Array.from(monthlyTotReturnsNodes).map(node => ({\n                  classId: node.getAttribute('classId'),\n                  rtn1: parseFloat(node.getAttribute('rtn1')),\n                  rtn2: parseFloat(node.getAttribute('rtn2')),\n                  rtn3: parseFloat(node.getAttribute('rtn3')),\n                }));\n\n                return {\n                  name: xmlDoc.querySelector('FundName')?.textContent || 'N/A',\n                  position: xmlDoc.querySelector('Position')?.textContent || 'N/A',\n                  year: xmlDoc.querySelector('Year')?.textContent || 'N/A',\n                  classIdentificationNumber: returnInfo.querySelector('ClassIdentificationNumber')?.textContent || 'N/A',\n                  monthlyTotReturns,\n                };\n              }\n              return null;\n            } catch (error) {\n              console.error('Error fetching filing details:', error);\n              return null;\n            }\n          })\n        );\n\n        const filteredResults = filingDetails.filter(item => item !== null);\n        setResults(filteredResults);\n      } catch (error) {\n        console.error('There was an error fetching the data!', error);\n        setResults([]); // Clear results on error\n      }\n    };\n\n    fetchResults();\n  }, []);\n\n  const calculateMER = (monthlyReturns) => {\n    const averageReturn = monthlyReturns.reduce((acc, val) => acc + val, 0) / monthlyReturns.length;\n    return (averageReturn * 12).toFixed(2);\n  };\n\n  return (\n    <div className=\"search-container1\">\n      <h2>Funds Return Information</h2>\n      <div className=\"search-results1\">\n        {results.map((result, index) => (\n          <div key={index} className=\"search-result1\">\n            <p><strong>Name:</strong> {result.name}</p>\n            <p><strong>Position:</strong> {result.position}</p>\n            <p><strong>Year:</strong> {result.year}</p>\n            <p><strong>Class Identification Number:</strong> {result.classIdentificationNumber}</p>\n\n            <h3>Monthly Total Return Record</h3>\n            {result.monthlyTotReturns && (\n              <div>\n                {result.monthlyTotReturns.map((returnData, idx) => (\n                  <p key={idx}>{`Month ${idx + 1}: ${returnData.rtn1}, ${returnData.rtn2}, ${returnData.rtn3}`}</p>\n                ))}\n                <p><strong>MER (Annual):</strong> {calculateMER(result.monthlyTotReturns.map(r => r.rtn1))}%</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}