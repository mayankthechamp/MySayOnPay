{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst Funds = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024'); // Default year is 2024\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/public/data/MutualFunds.json' : '/public/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        setResults(response.data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n      }\n    };\n    fetchResults();\n  }, [year]);\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: results.length ? Object.keys(results[0].monthly_total_returns) : [],\n    datasets: results.map(item => ({\n      label: item.company_name,\n      data: Object.values(item.monthly_total_returns),\n      fill: false,\n      borderColor: '#007bff',\n      tension: 0.1\n    }))\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Month'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Return'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"vaIwbBjTuT+TivNH2gXon5dDN8U=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","Funds","_s","results","setResults","year","setYear","fetchResults","fileName","response","get","data","error","console","chartData","labels","length","Object","keys","monthly_total_returns","datasets","map","item","label","company_name","values","fill","borderColor","tension","chartOptions","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","y","beginAtZero","className","children","_jsxFileName","lineNumber","columnNumber","onClick","options","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\n// Register necessary components for Chart.js\nChartJS.register(LineElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n\nconst Funds = () => {\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024'); // Default year is 2024\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/public/data/MutualFunds.json' : '/public/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        setResults(response.data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: results.length ? Object.keys(results[0].monthly_total_returns) : [],\n    datasets: results.map((item) => ({\n      label: item.company_name,\n      data: Object.values(item.monthly_total_returns),\n      fill: false,\n      borderColor: '#007bff',\n      tension: 0.1,\n    })),\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            return `${context.dataset.label}: ${context.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Month',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Return',\n        },\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {results.length > 0 ? (\n        <Line data={chartData} options={chartOptions} />\n      ) : (\n        <p>No data available for the selected year.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}