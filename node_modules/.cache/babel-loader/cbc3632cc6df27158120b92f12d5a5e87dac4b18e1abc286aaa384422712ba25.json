{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [data2024, setData2024] = useState([]);\n  const [data2023, setData2023] = useState([]);\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  // Function to calculate Management Expense Ratio (MER)\n  const calculateMER = (monthlyExpenses, monthlyAssets) => {\n    const totalExpenses = monthlyExpenses.reduce((acc, val) => acc + val, 0);\n    const averageAssets = monthlyAssets.reduce((acc, val) => acc + val, 0) / monthlyAssets.length;\n    return (totalExpenses / averageAssets * 100).toFixed(2);\n  };\n\n  // Function to calculate Fund Annual Return\n  const calculateAnnualReturn = monthlyReturns => {\n    const averageMonthlyReturn = monthlyReturns.reduce((acc, val) => acc + val, 0) / monthlyReturns.length;\n    return (averageMonthlyReturn * 12).toFixed(2);\n  };\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyExpenses = Object.values(item.monthly_expenses).map(Number);\n          const monthlyAssets = Object.values(item.monthly_assets).map(Number);\n          const monthlyReturns = Object.values(item.monthly_returns).map(Number); // Assuming monthly returns are available\n\n          const mer = calculateMER(monthlyExpenses, monthlyAssets);\n          const annualReturn = calculateAnnualReturn(monthlyReturns);\n          const totalReturn = (parseFloat(annualReturn) + parseFloat(mer)).toFixed(2);\n          return {\n            company_name: item.company_name,\n            fundAnnualReturn: annualReturn,\n            mer,\n            totalReturn\n          };\n        });\n        if (year === '2024') {\n          setData2024(data);\n          setCalculatedData(metrics);\n        } else {\n          setData2023(data);\n          setCalculatedData(metrics);\n        }\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchResults();\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), calculatedData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data for \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fund Annual Return (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Management Expense Ratio (MER) (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Return (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calculatedData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.company_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.fundAnnualReturn, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.mer, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.totalReturn, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, item.company_name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : !loading && !calculatedData.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"YQDIFoX3AoeoPiQniDg99PSYZUo=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","data2024","setData2024","data2023","setData2023","calculatedData","setCalculatedData","year","setYear","loading","setLoading","error","setError","calculateMER","monthlyExpenses","monthlyAssets","totalExpenses","reduce","acc","val","averageAssets","length","toFixed","calculateAnnualReturn","monthlyReturns","averageMonthlyReturn","fetchResults","fileName","console","log","response","get","data","metrics","map","item","Object","values","monthly_expenses","Number","monthly_assets","monthly_returns","mer","annualReturn","totalReturn","parseFloat","company_name","fundAnnualReturn","className","children","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\nconst Funds = () => {\n  const [data2024, setData2024] = useState([]);\n  const [data2023, setData2023] = useState([]);\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  // Function to calculate Management Expense Ratio (MER)\n  const calculateMER = (monthlyExpenses, monthlyAssets) => {\n    const totalExpenses = monthlyExpenses.reduce((acc, val) => acc + val, 0);\n    const averageAssets = monthlyAssets.reduce((acc, val) => acc + val, 0) / monthlyAssets.length;\n    return ((totalExpenses / averageAssets) * 100).toFixed(2);\n  };\n\n  // Function to calculate Fund Annual Return\n  const calculateAnnualReturn = (monthlyReturns) => {\n    const averageMonthlyReturn = monthlyReturns.reduce((acc, val) => acc + val, 0) / monthlyReturns.length;\n    return (averageMonthlyReturn * 12).toFixed(2);\n  };\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyExpenses = Object.values(item.monthly_expenses).map(Number);\n          const monthlyAssets = Object.values(item.monthly_assets).map(Number);\n          const monthlyReturns = Object.values(item.monthly_returns).map(Number); // Assuming monthly returns are available\n\n          const mer = calculateMER(monthlyExpenses, monthlyAssets);\n          const annualReturn = calculateAnnualReturn(monthlyReturns);\n          const totalReturn = (parseFloat(annualReturn) + parseFloat(mer)).toFixed(2);\n\n          return {\n            company_name: item.company_name,\n            fundAnnualReturn: annualReturn,\n            mer,\n            totalReturn\n          };\n        });\n\n        if (year === '2024') {\n          setData2024(data);\n          setCalculatedData(metrics);\n        } else {\n          setData2023(data);\n          setCalculatedData(metrics);\n        }\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {calculatedData.length > 0 && !loading ? (\n        <div>\n          <h2>Data for {year}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Company Name</th>\n                <th>Fund Annual Return (%)</th>\n                <th>Management Expense Ratio (MER) (%)</th>\n                <th>Total Return (%)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {calculatedData.map((item) => (\n                <tr key={item.company_name}>\n                  <td>{item.company_name}</td>\n                  <td>{item.fundAnnualReturn}%</td>\n                  <td>{item.mer}%</td>\n                  <td>{item.totalReturn}%</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : !loading && !calculatedData.length ? (\n        <p>No data available for the selected year.</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}