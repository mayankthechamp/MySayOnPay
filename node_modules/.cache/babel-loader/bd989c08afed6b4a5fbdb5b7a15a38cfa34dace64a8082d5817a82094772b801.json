{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024');\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        setResults(response.data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n      }\n    };\n    fetchResults();\n  }, [year]);\n\n  // Extract headers for the table\n  const headers = results.length > 0 ? Object.keys(results[0].monthly_total_returns) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), headers.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.monthly_total_returns[header] || '-'\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this))]\n        }, item.company_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"vaIwbBjTuT+TivNH2gXon5dDN8U=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","results","setResults","year","setYear","fetchResults","fileName","response","get","data","error","console","headers","length","Object","keys","monthly_total_returns","className","children","_jsxFileName","lineNumber","columnNumber","onClick","map","header","item","company_name","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\nconst Funds = () => {\n  const [results, setResults] = useState([]);\n  const [year, setYear] = useState('2024');\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        const response = await axios.get(fileName); // Use axios to fetch data\n        setResults(response.data);\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  // Extract headers for the table\n  const headers = results.length > 0 ? Object.keys(results[0].monthly_total_returns) : [];\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {results.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Company Name</th>\n              {headers.map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {results.map((item) => (\n              <tr key={item.company_name}>\n                <td>{item.company_name}</td>\n                {headers.map((header) => (\n                  <td key={header}>{item.monthly_total_returns[header] || '-'}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No data available for the selected year.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}