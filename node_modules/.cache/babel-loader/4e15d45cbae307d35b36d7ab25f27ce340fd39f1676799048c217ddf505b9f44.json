{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Funds = () => {\n  _s();\n  const [data2024, setData2024] = useState([]);\n  const [data2023, setData2023] = useState([]);\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  // Function to calculate Monthly Excess Return (MER)\n  const calculateMER = (monthlyReturns, averageMonthlyReturn) => {\n    return monthlyReturns.map(returnVal => (returnVal - averageMonthlyReturn).toFixed(2));\n  };\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate average monthly return across all funds\n        const allMonthlyReturns = data.flatMap(item => Object.values(item.monthly_total_returns));\n        const averageMonthlyReturn = (allMonthlyReturns.reduce((acc, curr) => acc + curr, 0) / allMonthlyReturns.length).toFixed(2);\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyReturns = Object.values(item.monthly_total_returns);\n          const totalMonths = monthlyReturns.length;\n          const totalReturn = monthlyReturns.reduce((acc, curr) => acc + curr, 0); // Calculate total return\n          const averageMonthlyReturnForFund = totalReturn / totalMonths;\n          const annualReturn = (averageMonthlyReturnForFund * 12).toFixed(2);\n          const returnLostToAdvisor = (item.total_return ? item.total_return - annualReturn : 0).toFixed(2); // Handle missing total_return\n          const percentageLost = (item.total_return ? returnLostToAdvisor / item.total_return * 100 : 0).toFixed(2); // Handle missing total_return\n\n          return {\n            company_name: item.company_name,\n            averageMonthlyReturn: averageMonthlyReturnForFund.toFixed(2),\n            annualReturn,\n            totalReturn: item.total_return ? item.total_return.toFixed(2) : 'N/A',\n            returnLostToAdvisor,\n            percentageLost,\n            mer: calculateMER(monthlyReturns, averageMonthlyReturn) // Calculate MER\n          };\n        });\n        if (year === '2024') {\n          setData2024(data);\n          setCalculatedData(metrics);\n        } else {\n          setData2023(data);\n          setCalculatedData(metrics);\n        }\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchResults();\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Funds Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2023'),\n        children: \"2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setYear('2024'),\n        children: \"2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), calculatedData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data for \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Average Monthly Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Annual Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Return Lost to Advisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"% Return Lost to Advisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Monthly Excess Return (MER)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calculatedData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.company_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.averageMonthlyReturn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.annualReturn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.totalReturn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.returnLostToAdvisor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.percentageLost, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: item.mer.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Month \", index + 1, \": \", value]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, item.company_name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : !loading && !calculatedData.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected year.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Funds, \"YQDIFoX3AoeoPiQniDg99PSYZUo=\");\n_c = Funds;\nexport default Funds;\nvar _c;\n$RefreshReg$(_c, \"Funds\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Funds","_s","data2024","setData2024","data2023","setData2023","calculatedData","setCalculatedData","year","setYear","loading","setLoading","error","setError","calculateMER","monthlyReturns","averageMonthlyReturn","map","returnVal","toFixed","fetchResults","fileName","console","log","response","get","data","allMonthlyReturns","flatMap","item","Object","values","monthly_total_returns","reduce","acc","curr","length","metrics","totalMonths","totalReturn","averageMonthlyReturnForFund","annualReturn","returnLostToAdvisor","total_return","percentageLost","company_name","mer","className","children","_jsxFileName","lineNumber","columnNumber","onClick","value","index","_c","$RefreshReg$"],"sources":["/home/mayank/Desktop/Investor-SIte/market/src/components/Funds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios\nimport './Funds.css';\n\nconst Funds = () => {\n  const [data2024, setData2024] = useState([]);\n  const [data2023, setData2023] = useState([]);\n  const [calculatedData, setCalculatedData] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  // Function to calculate Monthly Excess Return (MER)\n  const calculateMER = (monthlyReturns, averageMonthlyReturn) => {\n    return monthlyReturns.map(returnVal => (returnVal - averageMonthlyReturn).toFixed(2));\n  };\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      setLoading(true); // Set loading to true before fetching\n      setError(null); // Reset error state\n\n      try {\n        // Ensure that the path is correct\n        const fileName = year === '2024' ? '/data/MutualFunds.json' : '/data/MutualFunds1.json';\n        console.log(`Fetching data from: ${fileName}`); // Debugging log\n\n        const response = await axios.get(fileName); // Use axios to fetch data\n        const data = response.data;\n\n        // Check if data is in the expected format\n        console.log('Fetched data:', data); // Debugging log\n\n        // Calculate average monthly return across all funds\n        const allMonthlyReturns = data.flatMap(item => Object.values(item.monthly_total_returns));\n        const averageMonthlyReturn = (allMonthlyReturns.reduce((acc, curr) => acc + curr, 0) / allMonthlyReturns.length).toFixed(2);\n\n        // Calculate metrics\n        const metrics = data.map(item => {\n          const monthlyReturns = Object.values(item.monthly_total_returns);\n          const totalMonths = monthlyReturns.length;\n          const totalReturn = monthlyReturns.reduce((acc, curr) => acc + curr, 0); // Calculate total return\n          const averageMonthlyReturnForFund = totalReturn / totalMonths;\n          const annualReturn = (averageMonthlyReturnForFund * 12).toFixed(2);\n          const returnLostToAdvisor = (item.total_return ? item.total_return - annualReturn : 0).toFixed(2); // Handle missing total_return\n          const percentageLost = (item.total_return ? ((returnLostToAdvisor / item.total_return) * 100) : 0).toFixed(2); // Handle missing total_return\n\n          return {\n            company_name: item.company_name,\n            averageMonthlyReturn: averageMonthlyReturnForFund.toFixed(2),\n            annualReturn,\n            totalReturn: item.total_return ? item.total_return.toFixed(2) : 'N/A',\n            returnLostToAdvisor,\n            percentageLost,\n            mer: calculateMER(monthlyReturns, averageMonthlyReturn) // Calculate MER\n          };\n        });\n\n        if (year === '2024') {\n          setData2024(data);\n          setCalculatedData(metrics);\n        } else {\n          setData2023(data);\n          setCalculatedData(metrics);\n        }\n      } catch (error) {\n        console.error('Error fetching the JSON data:', error);\n        setError('Failed to fetch data.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n\n    fetchResults();\n  }, [year]);\n\n  return (\n    <div className=\"funds\">\n      <h1>Funds Data</h1>\n      <div>\n        <button onClick={() => setYear('2023')}>2023</button>\n        <button onClick={() => setYear('2024')}>2024</button>\n      </div>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {calculatedData.length > 0 && !loading ? (\n        <div>\n          <h2>Data for {year}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Company Name</th>\n                <th>Average Monthly Return</th>\n                <th>Annual Return</th>\n                <th>Total Return</th>\n                <th>Return Lost to Advisor</th>\n                <th>% Return Lost to Advisor</th>\n                <th>Monthly Excess Return (MER)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {calculatedData.map((item) => (\n                <tr key={item.company_name}>\n                  <td>{item.company_name}</td>\n                  <td>{item.averageMonthlyReturn}</td>\n                  <td>{item.annualReturn}</td>\n                  <td>{item.totalReturn}</td>\n                  <td>{item.returnLostToAdvisor}</td>\n                  <td>{item.percentageLost}%</td>\n                  <td>\n                    <ul>\n                      {item.mer.map((value, index) => (\n                        <li key={index}>Month {index + 1}: {value}</li>\n                      ))}\n                    </ul>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : !loading && !calculatedData.length ? (\n        <p>No data available for the selected year.</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Funds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}